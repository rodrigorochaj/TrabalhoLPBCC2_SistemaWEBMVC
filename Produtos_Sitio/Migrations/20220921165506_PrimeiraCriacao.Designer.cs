// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Produtos_Sitio.Models;

#nullable disable

namespace Produtos_Sitio.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20220921165506_PrimeiraCriacao")]
    partial class PrimeiraCriacao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EntregaVenda", b =>
                {
                    b.Property<int>("entregaid")
                        .HasColumnType("int");

                    b.Property<int>("vendasid")
                        .HasColumnType("int");

                    b.HasKey("entregaid", "vendasid");

                    b.HasIndex("vendasid");

                    b.ToTable("EntregaVenda");
                });

            modelBuilder.Entity("Produtos_Sitio.Models.Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("telefone")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Produtos_Sitio.Models.Entrega", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("data_entrega")
                        .HasColumnType("datetime2");

                    b.Property<int>("entregue")
                        .HasColumnType("int");

                    b.Property<int>("pago")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Entregas");
                });

            modelBuilder.Entity("Produtos_Sitio.Models.Produto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("peso")
                        .HasColumnType("real");

                    b.Property<float>("valor")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Produtos_Sitio.Models.Venda", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.Property<int?>("clienteid")
                        .HasColumnType("int");

                    b.Property<DateTime>("data")
                        .HasColumnType("datetime2");

                    b.Property<int?>("produtoid")
                        .HasColumnType("int");

                    b.Property<float>("quantidade")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("clienteid");

                    b.HasIndex("produtoid");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("EntregaVenda", b =>
                {
                    b.HasOne("Produtos_Sitio.Models.Entrega", null)
                        .WithMany()
                        .HasForeignKey("entregaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Produtos_Sitio.Models.Venda", null)
                        .WithMany()
                        .HasForeignKey("vendasid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Produtos_Sitio.Models.Venda", b =>
                {
                    b.HasOne("Produtos_Sitio.Models.Cliente", "cliente")
                        .WithMany("vendas")
                        .HasForeignKey("clienteid");

                    b.HasOne("Produtos_Sitio.Models.Produto", "produto")
                        .WithMany()
                        .HasForeignKey("produtoid");

                    b.Navigation("cliente");

                    b.Navigation("produto");
                });

            modelBuilder.Entity("Produtos_Sitio.Models.Cliente", b =>
                {
                    b.Navigation("vendas");
                });
#pragma warning restore 612, 618
        }
    }
}
